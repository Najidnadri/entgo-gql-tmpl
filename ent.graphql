directive @goField(forceResolver: Boolean, name: String) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!]) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
"""
CreatePaymentInput is used for create Payment object.
Input was generated by ent.
"""
input CreatePaymentInput {
  dateCreated: Time
  dateUpdated: Time
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "chipin/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Payment implements Node {
  id: ID!
  dateCreated: Time!
  dateUpdated: Time!
}
"""
A connection to a list of items.
"""
type PaymentConnection {
  """
  A list of edges.
  """
  edges: [PaymentEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PaymentEdge {
  """
  The item at the end of the edge.
  """
  node: Payment
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Payment connections
"""
input PaymentOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Payments.
  """
  field: PaymentOrderField!
}
"""
Properties by which Payment connections can be ordered.
"""
enum PaymentOrderField {
  ID
  CREATED_AT
  UPDATED_AT
}
"""
PaymentWhereInput is used for filtering Payment objects.
Input was generated by ent.
"""
input PaymentWhereInput {
  not: PaymentWhereInput
  and: [PaymentWhereInput!]
  or: [PaymentWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  date_created field predicates
  """
  dateCreated: Time
  dateCreatedNEQ: Time
  dateCreatedIn: [Time!]
  dateCreatedNotIn: [Time!]
  dateCreatedGT: Time
  dateCreatedGTE: Time
  dateCreatedLT: Time
  dateCreatedLTE: Time
  """
  date_updated field predicates
  """
  dateUpdated: Time
  dateUpdatedNEQ: Time
  dateUpdatedIn: [Time!]
  dateUpdatedNotIn: [Time!]
  dateUpdatedGT: Time
  dateUpdatedGTE: Time
  dateUpdatedLT: Time
  dateUpdatedLTE: Time
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  payments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Payments returned from the connection.
    """
    orderBy: [PaymentOrder!]

    """
    Filtering options for Payments returned from the connection.
    """
    where: PaymentWhereInput
  ): PaymentConnection!
}
"""
The builtin Time type
"""
scalar Time
"""
UpdatePaymentInput is used for update Payment object.
Input was generated by ent.
"""
input UpdatePaymentInput {
  dateUpdated: Time
}
